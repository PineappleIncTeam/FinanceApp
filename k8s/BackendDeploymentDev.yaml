apiVersion: apps/v1
kind: Deployment
metadata:
  name: freenance-deployment-dev
  namespace: {{NAMESPACE}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: freenance-backend-dev
  template:
    metadata:
      annotations:
        fluentd.active: 'true'
      labels:
        app: freenance-backend-dev
    spec:
      containers:
        - name: freenance
          image: freenance/backend-dev:{{IMAGE_TAG}}
          ports:
            - containerPort: 8000
          resources:
            requests:
              memory: "100Mi"
              cpu: "50m"
            limits:
              memory: "250Mi"
              cpu: "300m"
          envFrom:
            - secretRef:
                name: finance-dev-secret
          volumeMounts:
            - name: django-storage
              mountPath: /app/static
          lifecycle:
            postStart:
              exec:
                command: ["python", "manage.py", "migrate"]
      volumes:
        - name: freenance-storage
          persistentVolumeClaim:
            claimName: freenance-pvc-dev
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{NAMESPACE}}
  name: freenance-service-dev
spec:
  selector:
    app: freenance-backend-dev
  type: ClusterIP
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: {{NAMESPACE}}
  name: freenance-pvc-dev
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: freenance-pv-dev
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: local-storage
  hostPath:
    path: /data/{{NAMESPACE}}
