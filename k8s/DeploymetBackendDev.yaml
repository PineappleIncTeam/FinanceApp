apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: {{NAMESPACE}}
  name: postgresdb-pv-{{NAMESPACE}}
  labels:
    type: local
    app: postgresdb-develop
spec:
  storageClassName: local-storage
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/data/db/{{NAMESPACE}}/"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: {{NAMESPACE}}
  name: postgresdb-pvc-{{NAMESPACE}}
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{NAMESPACE}}
  name: postgresdb
  labels:
    app: postgresdb-develop
spec:
  type: ClusterIP  # Fixed: Changed service type to ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgresdb-develop
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresdb
  namespace: {{NAMESPACE}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgresdb-develop
  serviceName: postgresdb-headless
  template:
    metadata:
      labels:
        app: postgresdb-develop
      annotations:
        fluentd.active: 'true'
    spec:
      containers:
      - name: postgresdb
        image: postgres:15-bullseye
        env:
          - name: TZ
            value: "UTC-3"
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql-secret-dev
                key: POSTGRES_PASSWORD
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: postgresql-secret-dev
                key: POSTGRES_USER
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: postgresql-secret-dev
                key: POSTGRES_DB
        volumeMounts:
        - name: postgresdb-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "145Mi"
            cpu: "25m"
          limits:
            memory: "180Mi"
            cpu: "160m"
      volumes:
        - name: postgresdb-data
          persistentVolumeClaim:
            claimName: postgresdb-pvc-{{NAMESPACE}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-deployment
  namespace: {{NAMESPACE}}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-backend
  template:
    metadata:
      labels:
        app: django-backend
    spec:
      containers:
        - name: django
          image: freenance/backend:{{IMAGE_TAG}}
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: finance-dev-secret
          volumeMounts:
            - name: django-storage
              mountPath: /app/static
          lifecycle:
            postStart:
              exec:
                command: ["python", "manage.py", "migrate"]
      volumes:
        - name: django-storage
          persistentVolumeClaim:
            claimName: django-pvc
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{NAMESPACE}}
  name: django-app-service
spec:
  selector:
    app: django-backend
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  namespace: {{NAMESPACE}}
  name: django-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
  storageClassName: local-storage
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: python-pvc-dev
spec:
  capacity:
    storage: 2Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: local-storage
  hostPath:
    path: /data/django-pv-test
