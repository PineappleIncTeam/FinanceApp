# Generated by Django 4.2.16 on 2024-10-10 12:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0009_alter_accumulations_created_at_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование')),
                ('is_income', models.BooleanField(default=True, verbose_name='Признак категории дохода')),
                ('is_outcome', models.BooleanField(default=False, verbose_name='Признак категории расхода')),
                ('is_fixed', models.BooleanField(default=True, verbose_name='Признак постоянной категории')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Признак удаления записи')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'categories',
            },
        ),
        migrations.RunSQL(
            """INSERT INTO categories(user_id, name, is_fixed, is_income, is_outcome, is_deleted, created_at, updated_at)
               SELECT u.id,
                      t.name,
                      TRUE as is_fixed,
                      MAX(t.is_income)::boolean  AS is_income,
                      MAX(t.is_outcome)::boolean AS is_outcome,
                      FALSE as is_deleted,
                      t.created_at,
                      t.updated_at
               FROM (SELECT ic.name,
                            1 AS is_income,
                            0 AS is_outcome,
                            ic.created_at,
                            ic.updated_at
                    FROM api_incomecategories ic
                    UNION ALL
                    SELECT oc.name,
                           0 AS is_income,
                           1 AS is_outcome,
                           oc.created_at,
                           oc.updated_at
                    FROM api_outcomecategories oc) t
                    CROSS JOIN users u
               GROUP BY u.id,
                        t.name,
                        t.created_at,
                        t.updated_at;"""
        )
    ]
